///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Обновление конфигурации базы данных в режиме Конфигуратора
// 
// TODO добавить фичи для проверки команды
//
// Служебный модуль с набором методов работы с командами приложения
//
// Структура модуля реализована в соответствии с рекомендациями 
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#Использовать v8runner

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

	ТекстОписания = 
		"     Обновление конфигурации базы данных в режиме Конфигуратора.";

	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, 
		ТекстОписания);
	Парсер.ДобавитьКоманду(ОписаниеКоманды);

	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--v1", 
		"Поддержка режима реструктуризации -v1 на сервере");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--v2", 
		"Поддержка режима реструктуризации -v2 на сервере");
	
КонецПроцедуры // ЗарегистрироватьКоманду

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   ДополнительныеПараметры - Соответствие - дополнительные параметры (необязательно)
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры = Неопределено) Экспорт

	МенеджерКонфигуратора = Новый МенеджерКонфигуратора;

	ДанныеПодключения = ПараметрыКоманды["ДанныеПодключения"];

	МенеджерКонфигуратора.Инициализация(
		ДанныеПодключения.СтрокаПодключения, ДанныеПодключения.Пользователь, ДанныеПодключения.Пароль,
		ПараметрыКоманды["--v8version"], ПараметрыКоманды["--uccode"],
		ДанныеПодключения.КодЯзыка
		);

	РежимРеструктуризации_В1 = ПараметрыКоманды["--v1"];
	РежимРеструктуризации_В2 = ПараметрыКоманды["--v2"];
	РеструктуризацияНаСервере = РежимРеструктуризации_В1 Или РежимРеструктуризации_В2;

	Попытка
		Если РеструктуризацияНаСервере Тогда
			РежимРеструктуризации = Неопределено;
			УправлениеКонфигуратором = Новый УправлениеКонфигуратором();
			РежимыРеструктуризации = УправлениеКонфигуратором.РежимыРеструктуризации();

			Если РежимРеструктуризации_В2 Тогда
				РежимРеструктуризации = РежимыРеструктуризации.Второй;
			ИначеЕсли РежимРеструктуризации_В1 Тогда
				РежимРеструктуризации = РежимыРеструктуризации.Первый;
			КонецЕсли;
			МенеджерКонфигуратора.ОбновитьКонфигурациюБазыДанныхНаСервере(РежимРеструктуризации);
		Иначе
			МенеджерКонфигуратора.ОбновитьКонфигурациюБазыДанных();
		КонецЕсли;
	Исключение
		МенеджерКонфигуратора.Деструктор();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;

	МенеджерКонфигуратора.Деструктор();

	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;
КонецФункции // ВыполнитьКоманду
